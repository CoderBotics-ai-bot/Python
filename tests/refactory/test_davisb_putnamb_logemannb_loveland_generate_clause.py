import pytest
from other.davisb_putnamb_logemannb_loveland import *


def test_generate_clause_no_errors():
    """
    This test checks if the generate_clause function executes without throwing errors
    """
    result = generate_clause()
    assert result is not None


def test_generate_clause_return_type():
    """
    This test checks if the generate_clause function returns an instance of Clause
    """
    result = generate_clause()
    assert isinstance(result, Clause)


def test_generate_clause_literals():
    """
    This test checks if all literals in the clause generated by generate_clause
    function have the correct namings and are unique
    """
    result = generate_clause()
    literals = result.literals
    base_var = "A"
    assert all([literal.startswith(base_var) for literal in literals])
    assert len(literals) == len(set(literals))


def test_generate_clause_literals_count():
    """
    This test checks if the count of literals in the clause generated by generate_clause
    function is between 1 and 5 (both inclusive)
    """
    result = generate_clause()
    literals = result.literals
    assert len(literals) >= 1 and len(literals) <= 5
